{"version":3,"sources":["./src/app/screens/user-profile/user-profile.component.html","./src/app/screens/sign-up/sign-up.component.ts","./src/app/screens/dashboard/grafico/grafico.presets.ts","./src/app/screens/dashboard/grafico/grafico.component.ts","./src/app/layouts/admin-layout/admin-layout.module.ts","./src/app/screens/dashboard/dashboard.component.html","./src/app/screens/user-profile/user-profile.component.ts","./src/app/screens/dashboard/dashboard.service.ts","./src/app/screens/dashboard/grafico/grafico.component.html","./src/app/screens/sign-up/sign-up.component.html","./src/app/screens/dashboard/dashboard.component.ts","./src/app/layouts/admin-layout/admin-layout.routing.ts","./src/app/screens/dashboard/grafico/grafico.component.scss"],"names":[],"mappings":"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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["export default \"<div class=\\\" mt--7 header pb-6 d-flex align-items-center\\\" style=\\\"min-height: 500px; background-size: cover; background-position: center top;\\\">\\n  <span class=\\\" mask bg-primary\\\"> </span>\\n  <div class=\\\" container-fluid d-flex align-items-center\\\">\\n    <div class=\\\" row\\\">\\n      <div class=\\\" col-lg-7 col-md-10\\\">\\n        <h1 class=\\\" display-2 text-white\\\">Ola, {{currentUser.username}}</h1>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col ml-2\\\">\\n          <a class=\\\"btn btn-neutral text-nowrap\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/user/sign-up']\\\"> Registrar Novo Usuário </a>\\n        </div>\\n        <div class=\\\"col\\\">\\n          <a class=\\\"btn btn-neutral\\\" [routerLink]=\\\"['']\\\"> Sair </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container-fluid mt--6 bg-primary\\\" style=\\\"min-height: 100%; background-size: cover;\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-xl-4\\\">\\n      <div class=\\\"card card-profile\\\">\\n        <img alt=\\\"Image placeholder\\\" class=\\\" card-img-top\\\" src=\\\"assets/img/theme/img-1-1000x600.jpg\\\" />\\n\\n        <div class=\\\" row justify-content-center\\\">\\n          <div class=\\\" col-lg-3 order-lg-2\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\" card-header text-center border-0 pt-8 pt-md-4 pb-0 pb-md-4\\\">\\n          <div class=\\\" d-flex justify-content-between\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\" card-body pt-0\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n              <div class=\\\"row justify-content-center text-center\\\">\\n                <h5 class=\\\" h3\\\">\\n                  {{currentUser.username}}\\n                </h5>\\n              </div>\\n              <div class=\\\"row justify-content-center text-center\\\">\\n                  <span class=\\\"mx-2 font-weight-bold\\\">Cargo:</span>{{currentUser.role}}\\n                  <span class=\\\"mx-2 font-weight-bold\\\">E-mail:</span>{{currentUser.email}}\\n              </div>\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: \"app-sign-up\",\n  templateUrl: \"sign-up.component.html\"\n})\n\nexport class SignUpComponent implements OnInit {\n\n  signUpForm = new FormGroup({\n    username: new FormControl('', [Validators.required, Validators.minLength(5)]),\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    confirmPassword: new FormControl('', [Validators.required, Validators.minLength(8)]),\n    roleCheck: new FormControl(false, [Validators.required, Validators.minLength(8)]),\n  });\n  isSuccessful: boolean = false;\n  isSignUpFailed: boolean = false;\n  errorMessage: string = '';\n  confirmMessage: string = '';\n  showPassword: boolean = false;\n  focus: boolean = false;\n  focus1: boolean = false;\n  focus2: boolean = false;\n\n  constructor(\n    private authService: AuthService,\n    private cd: ChangeDetectorRef,\n    private router: Router\n  ) { };\n\n  onSubmit(): void {\n    let username = this.signUpForm.get('username').value;\n    let email = this.signUpForm.get('email').value;\n    let password = this.signUpForm.get('password').value;\n    let confirmPassword = this.signUpForm.get('confirmPassword').value;\n    console.log(\"teste\");\n    let roleCheck = this.signUpForm.get('roleCheck').value;\n    let role = 'User';\n    if(confirmPassword === password){\n      if(roleCheck) {\n        role = 'Administrator'\n      }\n      this.isSuccessful = true;\n      this.isSignUpFailed = false;\n      this.confirmMessage = \"Register Successful!\";\n      /*this.authService\n        .register(username, email, password, role)\n        .subscribe(\n          data => {\n            this.isSuccessful = true;\n            this.isSignUpFailed = false;\n            this.confirmMessage = \"Register Successful!\";\n            this.authService.sendEmailVerification(email).subscribe();\n          },\n          err => {\n            this.errorMessage = err.error.message;\n            this.isSignUpFailed = true;\n          }\n        );*/\n    }\n    else {\n      this.errorMessage = \"Passwords do not match! Try Again\"\n      this.isSignUpFailed = true;\n    }\n\n  };\n  handleEnterKey(e){\n     if(this.signUpForm.valid){\n        this.onSubmit();\n     }\n  }\n\n  passwordReveal() {\n    this.showPassword = !this.showPassword;\n  };\n\n  ngOnInit() { };\n  ngOnDestroy() { };\n\n};\n","export const graphConfigPreset\n= {\n\tmodeBarButtonsToRemove: [\"lasso2d\", \"autoScale2d\",\"zoom2d\",\"select2d\"],\n\teditable:true,\n\tdisplaylogo: false,\n\ttoImageButtonOptions: {\n\t\tformat: \"png\", // one of png, svg, jpeg, webp\n\t\tfilename: \"custom_image\",\n\t\theight: 500,\n\t\twidth: 700,\n\t\t// scale: 1, // Multiply title/legend/axis/canvas sizes by this factor\n\t},\n};\n\n// export const graphLayoutPreset = {\n// \tresponsive: true,\n// \ttitle: \"Clique aqui para editar o titulo\",\n// \tshowlegend: true,\n// \tlegend: {\n// \t\tx: 0,\n// \t\ty: 100,\n// \t},\n// \tstaticPlot: true,\n// \tfont: {\n// \t\tcolor: '#000000',\n// \t},\n// \tpaper_bgcolor: 'rgba(0,0,0,0)',\n// \tplot_bgcolor: 'rgba(0,0,0,0)',\n// \tautosize: false,\n// \txaxis: {\n// \t\ttitle: \"TEMPO\",\n// \t},\n// \tyaxis: {\n// \t\ttitle: \"DADOS\",\n// \t},\n// };\n","import {Component,AfterViewInit,ViewChild,ElementRef,Input} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { AuthService } from \"../../../_services/auth.service\";\nimport { ExportService } from \"src/app/_services/export.service\";\nimport * as Plotly from 'plotly.js/dist/plotly.js';\nimport {Grafico} from \"./grafico.model\";\nimport { DashboardService } from '../dashboard.service';\nimport { DashboardComponent } from '../dashboard.component'\nimport { parse } from 'papaparse';\n\n@Component({\n\tselector: 'app-grafico',\n\ttemplateUrl: './grafico.component.html',\n\tstyleUrls: ['./grafico.component.scss']\n})\n\nexport class GraficoComponent implements AfterViewInit {\n\tconstructor(\n\t\tprivate authService: AuthService,\n\t\tprivate exportService: ExportService,\n\t\tprivate sharedService: DashboardService,\n\t\tprivate dashboardComponent: DashboardComponent,\n\t) {}\n\tdeviceNumber: number\n\texportDateStart: Date\n\texportDateEnd: Date\n\ttempDate: Date\n\tfilteredExportData:any = []\n\tisExportFailed = false\n\tisExportSuccessful = false\n\terrorMessage = \"Export falhou! :(\"\n\tsuccessMessage = \"Dados Exportados com sucesso!\"\n\texportFileSize : number\n\tfileSizeMessage : string\n\tfileToRead: any\n\tjsonToImport: any;\n\n\t@Input() graph: Grafico\n\tcurrentInput:any;\n\n\texportMenuIsOpen:boolean = false\n\timportMenuIsOpen:boolean = false\n\texportForm = new FormGroup({\n\t\texportStartDate: new FormControl('', Validators.required),\n\t\texportStartTime: new FormControl('', Validators.required),\n\t\texportEndDate: new FormControl('', Validators.required),\n\t\texportEndTime: new FormControl('', Validators.required),\n\t});\n\n\tngAfterViewInit() {}\n\t// teste(){\n\t//\talert(\"voce clicou no grafico!\")\n\t// }\n   onFileSelected(files: FileList) {\n\t\t this.fileToRead = files.item(0);\n\t\t const reader = new FileReader();\n\t\t reader.onload = () => {\n\t\t\t this.jsonToImport = this.csvJSON(reader.result);\n\t\t\t console.log(this.jsonToImport);\n\t\t\t this.authService.sendData(this.jsonToImport, this.graph.deviceNumber).subscribe((data) => {\n\t\t\t\t console.log(\"enviado!\");\n\t\t\t })\n\t\t };\n\t\t reader.readAsText(this.fileToRead);\n\t\t //this.authService.sendData000(this.fileToUpload).subscribe(data => {\n\t\t\t// console.log(\"Success! File uploaded\")\n\t\t //}, error => {\n\t\t//\t console.log(error);\n\t\t //});\n   }\n\n\t csvJSON(csv) {\n    var lines = csv.split(\"\\n\");\n\n    var result = [];\n\n    var headers = lines[0].split(\";\");\n\n    for (var i = 1; i < lines.length; i++) {\n\n        var obj = {};\n        var currentline = lines[i].split(\";\");\n\n        for (var j = 0; j < headers.length; j++) {\n            obj[headers[j]] = currentline[j];\n        }\n\n        result.push(obj);\n\n    }\n\n    return result; //JavaScript object\n    //return console.log(result); //JSON\n}\n\n\tatualizarGrafico(){\n\t\tconsole.log(this.graph);\n\t\tconsole.log(\"grafico atualizado\");\n\t}\n\n\texportMenuToggle(){\n\t\tif(this.exportMenuIsOpen)this.exportMenuIsOpen = false\n\t\t\telse {\n\t\t\t\tthis.exportMenuIsOpen = true\n\t\t\t}\n\t}\n\n\timportMenuToggle(){\n\t\tif(this.importMenuIsOpen)this.importMenuIsOpen = false\n\t\t\telse {\n\t\t\t\tthis.importMenuIsOpen = true\n\t\t\t}\n\t}\n\nsendRemoveEvent(): void {\n\tthis.sharedService.sendClickEvent(this.graph.id);\n}\n\tpreviewFileSize(){\n\t\tthis.isExportFailed = false\n\t\tthis.filteredExportData = []\n\t\tthis.exportDateStart = new Date(this.exportForm.get('exportStartDate').value+\"T\"+this.exportForm.get('exportStartTime').value)\n\t\tthis.exportDateEnd = new Date(this.exportForm.get('exportEndDate').value+\"T\"+this.exportForm.get('exportEndTime').value)\n\t\tconsole.log(this.exportDateEnd)\n\t\t// filtra os dados do export pelas datas recebidas pelo usuario\n\t\tfor(let i=0;i<this.graph.exportData.length;i++)\n\t\t{\n\t\t\tthis.tempDate = new Date(this.graph.exportData[i].valueTS)\n\t\t\tif(this.exportDateStart<=this.tempDate&&this.tempDate<=this.exportDateEnd){\n\t\t\t\t\tthis.filteredExportData.push(this.graph.exportData[i])\n\t\t\t}\n\t\t}\n\n\t\t// this.exportMenuIsOpen = false\n\t\tif(this.filteredExportData.length=== 0 ||this.filteredExportData.length === undefined)\n\t\t{\n\t\t\tthis.errorMessage = \"Erro: Nenhum dado para exportar,verifique os parametros e tente novamente!\";\n\t\t\tthis.isExportFailed = true\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.exportFileSize = this.exportService.predictFileSize(this.filteredExportData, \"jsontocsv\",this.graph.exportFields)\n\t\t\tthis.fileSizeMessage =\"O tamanho do arquivo de export atual: \"+this.exportFileSize/1000+\" kB\"\n\t\t\t// retornando o tamnho do arquivo final\n\t\t}\n\t}\n\n\texport(): void {\n\t\tthis.isExportFailed = false\n\t\tthis.filteredExportData = []\n\n\t\tthis.exportDateStart = new Date(this.exportForm.get('exportStartDate').value+\"T\"+this.exportForm.get('exportStartTime').value)\n\t\tthis.exportDateEnd = new Date(this.exportForm.get('exportEndDate').value+\"T\"+this.exportForm.get('exportEndTime').value)\n\n\t\t// console.log(\"To be Exported:\")\n\t\tfor(let i=0;i<this.graph.exportData.length;i++)\n\t\t{\n\t\t\tthis.tempDate = new Date(this.graph.exportData[i].valueTS)\n\t\t\tif(this.exportDateStart<=this.tempDate&&this.tempDate<=this.exportDateEnd){\n\t\t\t\t\tthis.filteredExportData.push(this.graph.exportData[i])\n\t\t\t}\n\t\t}\n\n\t\t// this.exportMenuIsOpen = false\n\t\tif(this.filteredExportData.length=== 0 ||this.filteredExportData.length === undefined)\n\t\t{\n\t\t\tthis.errorMessage = \"Erro: Nenhum dado para exportar,verifique os parametros e tente novamente!\";\n\t\t\tthis.isExportFailed = true\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.isExportSuccessful= true\n\n\t\t\tthis.exportService.downloadFile(this.filteredExportData, \"jsontocsv\",this.graph.exportFields);\n\t\t\t// exportando dados filtrados\n\t\t}\n\t}\n}\n","import { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { AdminLayoutRoutes } from \"./admin-layout.routing\";\nimport { AuthGuardService } from '../../_services/authguard.service';\nimport { UserProfileComponent } from \"../../screens/user-profile/user-profile.component\";\nimport { DashboardComponent} from \"../../screens/dashboard/dashboard.component\";\nimport { ComponentsModule} from \"../../components/components.module\";\nimport { SignUpComponent } from \"../../screens/sign-up/sign-up.component\";\nimport { PlotlyModule } from 'angular-plotly.js';\nimport { GraficoComponent } from \"src/app/screens/dashboard/grafico/grafico.component\";\n\n@NgModule({\n  imports: [\n    ComponentsModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    PlotlyModule,\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: [\n    UserProfileComponent,\n    DashboardComponent,\n    SignUpComponent,\n    GraficoComponent,\n  ],\n  providers: [AuthGuardService]\n})\nexport class AdminLayoutModule { }\n","export default \"<div class=\\\"bg-primary pt-7 pb-8\\\" style=\\\"\\n    min-height: 100%;\\n    background-size: cover;\\n    background-position: center top;\\n  \\\">\\n\\t<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row bg-primary justify-content-center pb-4\\\">\\n  \\t\\t<a *ngIf=\\\"!graphMenuIsOpen && graphCounter < 4\\\" class=\\\"btn btn-secondary text-white justify-content-center align-self-center\\\" (click)=\\\"openAddGraphMenu(true)\\\">Adicionar Grafico</a>\\n  \\t\\t<div *ngIf=\\\"graphMenuIsOpen\\\" class=\\\"container-fluid\\\">\\n  \\t\\t\\t<div class=\\\"row justify-content-center\\\">\\n  \\t\\t\\t\\t<div class=\\\"card bg-gradient-default shadow\\\">\\n  \\t\\t\\t\\t\\t<div class=\\\"card-header bg-transparent\\\">\\n  \\t\\t\\t\\t\\t\\t<div class=\\\"row align-items-center\\\">\\n  \\t\\t\\t\\t\\t\\t\\t<div class=\\\"col\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t<h6 class=\\\"text-uppercase text-light ls-1 mb-1\\\">Menu</h6>\\n  \\t\\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t<div class=\\\"row justify-content-center mt-n3\\\">\\n  \\t\\t\\t\\t\\t\\t<div class=\\\"dropdown\\\">\\n  \\t\\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-secondary dropdown-toggle my-3\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t{{ activeExperimentInGraphMenu }}\\n  \\t\\t\\t\\t\\t\\t\\t</button>\\n  \\t\\t\\t\\t\\t\\t\\t<div class=\\\"dropdown-menu justify-content-center\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n  \\t\\t\\t\\t\\t\\t\\t\\t<a *ngFor=\\\"let device of devices\\\" class=\\\"dropdown-item\\\" (click)=\\\"selectExperiment(device)\\\">{{ device }}</a>\\n  \\t\\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t\\t</div>\\n            <form role=\\\"form\\\" [formGroup]=\\\"pullGraphForm\\\">\\n            <div class=\\\"row justify-content-center my-3 mx-3 text-white\\\">\\n              <div class=\\\"col-3\\\">\\n                <p>Inicio:</p>\\n              </div>\\n              <div class=\\\"col-6 ml--5\\\"><input type=\\\"date\\\" formControlName=\\\"pullGraphStartDate\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" /></div>\\n              <div class=\\\"col-3\\\"><input type=\\\"time\\\" value=\\\"00:00\\\" formControlName=\\\"pullGraphStartTime\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" /></div>\\n            </div>\\n            <div class=\\\"row justify-content-center my-3 mx-3 text-white\\\">\\n              <div class=\\\"col-3\\\">\\n                <p>Fim:</p>\\n              </div>\\n              <div class=\\\"col-6 ml--5\\\"><input type=\\\"date\\\" formControlName=\\\"pullGraphEndDate\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" /></div>\\n              <div class=\\\"col-3\\\"><input type=\\\"time\\\" value=\\\"23:59\\\" formControlName=\\\"pullGraphEndTime\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" /></div>\\n            </div>\\n            </form>\\n  \\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\">\\n  \\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-secondary my-3 mx-4\\\" type=\\\"button\\\" (click)=\\\"addGraph()\\\">\\n  \\t\\t\\t\\t\\t\\t\\tPuxar Gráficos\\n  \\t\\t\\t\\t\\t\\t</button>\\n  \\t\\t\\t\\t\\t\\t<button class=\\\"btn btn-warning px-6 my-3 mx-4\\\" type=\\\"button\\\" (click)=\\\"openAddGraphMenu(false)\\\">\\n  \\t\\t\\t\\t\\t\\t\\tCancelar\\n  \\t\\t\\t\\t\\t\\t</button>\\n  \\t\\t\\t\\t\\t</div>\\n  \\t\\t\\t\\t</div>\\n  \\t\\t\\t</div>\\n  \\t\\t</div>\\n  \\t</div>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col\\\">\\n\\t\\t\\t\\t<section class=\\\"content\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"row justify-content-center\\\">\\n\\t\\t\\t\\t\\t\\t<div *ngFor=\\\"let graph of graphs\\\" class=\\\"card col-md-5 col-xs-12 mx-3\\\" style=\\\"height:600px;min-width:750px;max-height:700px\\\">\\n\\t\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"card col-md-8 col-xs-12\\\"> -->\\n\\t\\t\\t\\t\\t\\t\\t\\t<app-grafico [graph]=\\\"graph\\\"></app-grafico>\\n\\t\\t\\t\\t\\t\\t\\t<!-- </div> -->\\n\\t\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t</section>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<!-- <div *ngIf=\\\"restaurants?.length === 0\\\" class=\\\"col-xs-12\\\">\\n    <p class=\\\"lead text-center\\\">Não foram encontrados itens para a sua busca\\n    </p>\\n  </div> -->\\n\\n<!-- <div *ngFor=\\\"let graph of graphs\\\">\\n          <app-grafico [graph]=\\\"graph\\\"></app-grafico>\\n  </div> -->\\n\";","import { Component, OnInit } from \"@angular/core\";\n\nimport { TokenStorageService } from '../../_services/token-storage.service';\n\n@Component({\n  selector: \"app-user-profile\",\n  templateUrl: \"user-profile.component.html\"\n})\n\nexport class UserProfileComponent implements OnInit {\n\n  currentUser: any = {\n    username: \"João\",\n    role: \"Usuário\",\n    email: \"joao@gmail.com\"\n  };\n\n  constructor(private token: TokenStorageService) { }\n\n  logout(): void {\n    this.token.signOut();\n    window.location.reload();\n  };\n\n  ngOnInit() {\n    console.log(this.currentUser)\n  };\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor() { }\n\n\tprivate subject = new Subject<any>();\n\n  currentGraphId: number;\n\n\tsendClickEvent(graphId) {\n    this.currentGraphId = graphId;\n\t\tthis.subject.next();\n\t}\n\n\tgetClickEvent(): Observable<any> {\n\t\treturn this.subject.asObservable();\n\t}\n}\n","export default \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row-12\\\">\\n    <!-- <div class=\\\"col-12 bg-default\\\"> Inicio: <input type='date'><input type='time'> </div> -->\\n    <div class=\\\"d-flex justify-content-between mb-4 mt-2\\\">\\n      <div *ngIf=\\\"!exportMenuIsOpen\\\">\\n        <a\\n  \\t\\t    class=\\\" btn btn-secondary text-white\\\"\\n  \\t\\t    (click)=\\\"exportMenuToggle()\\\">\\n  \\t\\t    Exportar Grafico\\n  \\t\\t  </a>\\n      </div>\\n\\t\\t\\t<div *ngIf=\\\"exportMenuIsOpen\\\">\\n\\t\\t\\t<a\\n\\t\\t    class=\\\" btn btn-secondary text-white\\\"\\n\\t\\t    (click)=\\\"export()\\\">\\n\\t\\t    Confirmar e Exportar\\n\\t\\t  </a>\\n      </div>\\n      <div *ngIf=\\\"exportMenuIsOpen\\\">\\n      <a\\n\\t\\t    class=\\\" btn btn-secondary text-white\\\"\\n\\t\\t    (click)=\\\"previewFileSize()\\\">\\n\\t\\t    Prever tamanho do export\\n\\t\\t  </a>\\n      </div>\\n      <div *ngIf=\\\"exportMenuIsOpen\\\">\\n      <a\\n        class=\\\" btn btn-danger text-white\\\"\\n        (click)=\\\"exportMenuToggle()\\\">\\n        Cancelar\\n      </a>\\n      </div>\\n      <a *ngIf=\\\"!exportMenuIsOpen\\\" class=\\\"btn btn-secondary text-white\\\" (click)=\\\"importMenuToggle()\\\">\\n\\t\\t\\t\\tImportar Dados\\n\\t\\t\\t</a>\\n      <a *ngIf=\\\"!exportMenuIsOpen\\\" class=\\\"btn btn-secondary text-white\\\" (click)=\\\"atualizarGrafico()\\\">\\n\\t\\t\\t\\tAtualizar Gráfico\\n\\t\\t\\t</a>\\n      <a *ngIf=\\\"!exportMenuIsOpen\\\" class=\\\"btn btn-secondary text-white\\\" (click)=\\\"sendRemoveEvent(this.graph.id)\\\">\\n\\t\\t\\t\\tRemover Gráfico\\n\\t\\t\\t</a>\\n\\t\\t</div>\\n    <div *ngIf=\\\"importMenuIsOpen\\\">\\n      <input type=\\\"file\\\" accept=\\\".csv\\\" id=\\\"file\\\"\\n      (change)=\\\"onFileSelected($event.target.files)\\\">\\n    </div>\\n\\n    <div *ngIf=\\\"exportFileSize&&exportMenuIsOpen\\\" class=\\\"rounded text-muted bg-success text-white\\n      w-60 text-center mt-1 mb-3 mx-auto\\\">\\n      <small>{{this.fileSizeMessage}} </small>\\n      <br>\\n    </div>\\n\\t\\t<form role=\\\"form\\\" [formGroup]=\\\"exportForm\\\">\\n\\t\\t\\t<div *ngIf=\\\"exportMenuIsOpen\\\">\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-3\\\">\\n\\t\\t\\t\\t\\t\\t<p>Inicio:</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-6\\\"><input type=\\\"date\\\" formControlName=\\\"exportStartDate\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" /></div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-3\\\"><input type=\\\"time\\\" formControlName=\\\"exportStartTime\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" /></div>\\n\\t\\t\\t\\t</div>\\n\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col-3\\\">\\n\\t\\t\\t\\t\\t\\t<p>Fim:</p>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-6\\\"><input type=\\\"date\\\" formControlName=\\\"exportEndDate\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" /></div>\\n\\t\\t\\t\\t\\t<div class=\\\"col-3\\\"><input type=\\\"time\\\" formControlName=\\\"exportEndTime\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" /></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</form>\\n\\n\\t</div>\\n\\n\\t<!--\\n    <div class=\\\"row align-items-center\\\"> Hora Inicio: <input type='time'>  Hora Fim: <input\\n    type='time'> </div>\\n  -->\\n</div>\\n\\n<!-- *ngIf=\\\"!graphMenuIsOpen\\\" -->\\n\\n<!--\\n  <div #myDiv id=\\\"{{graph.id}}\\\" style=\\\"{ position: 'center', width: '100%', height: '100%' }\\\"></div>\\n-->\\n\\n<plotly-plot\\n  id=\\\"{{graph.id}}\\\"\\n  [data]=\\\"graph.data\\\"\\n  [layout]=\\\"graph.layout\\\"\\n  [useResizeHandler]=\\\"true\\\"\\n  [style]=\\\"{ position: 'center', width: '100%', height: '100%'}\\\"\\n  [config]=\\\"graph.config\\\">\\n</plotly-plot>\\n\";","export default \"<div class=\\\"main-content bg-primary\\\" style=\\\"min-height: 100%;\\\">\\n  <div class=\\\"header py-7\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"header-body text-center mb-5\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n          <div class=\\\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-6 px-6\\\">\\n            <img *ngIf=\\\"!isSuccessful\\\" class=\\\"img-fluid\\\" src=\\\"/assets/img/biot/biot_logo.png\\\" alt=\\\"Logo da BioT\\\">\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n      <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n      </svg>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container mt--6\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-6 col-md-8\\\">\\n        <div class=\\\"card bg-white border-0 my-0\\\">\\n          <div *ngIf=\\\"!isSuccessful\\\" class=\\\"card-body\\\">\\n            <div class=\\\"row justify-content-center mb-3\\\">\\n              <div class=\\\"col-xl-5 col-lg-4 col-md-4 col-sm-3 col-4 px-3\\\">\\n                <img class=\\\"img-fluid\\\" src=\\\"/assets/img/biot/logo_text.png\\\" alt=\\\"BioT\\\">\\n              </div>\\n            </div>\\n            <div *ngIf=\\\"isSignUpFailed\\\" class=\\\"rounded text-muted bg-warning text-white\\n              w-60 text-center mt-1 mb-3 mx-auto\\\">\\n              <small>{{this.errorMessage}} </small>\\n            </div>\\n\\n            <form role=\\\"form\\\" [formGroup]=\\\"signUpForm\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focus === true }\\\">\\n                <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-hat-3\\\"></i></span>\\n                  </div>\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Nome de Usuário (Min: 5 letras)\\\" formControlName=\\\"username\\\" type=\\\"text\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focus1 === true }\\\">\\n                <div class=\\\"input-group input-group-alternative mb-3\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                  </div>\\n                  <input class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" type=\\\"email\\\" (focus)=\\\"focus1 = true\\\" (blur)=\\\"focus1 = false\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focus2 === true }\\\">\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                  </div>\\n                  <input [type]=\\\"showPassword ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"Senha (Min: 8 letras)\\\" formControlName=\\\"password\\\" type=\\\"password\\\" (focus)=\\\"focus2 = true\\\" (blur)=\\\"focus2 = false\\\" />\\n                  <button type=\\\"button\\\" (click)=\\\"passwordReveal()\\\" class=\\\"btn btn-secondary mt-1\\\">\\n                    <i *ngIf=\\\"showPassword\\\" class=\\\"fas fa-eye px-1\\\"></i>\\n                    <i *ngIf=\\\"!showPassword\\\" class=\\\"fas fa-eye-slash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focus2 === true }\\\">\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-lock-circle-open\\\"></i></span>\\n                  </div>\\n                <input [type]=\\\"showPassword ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"Confirmar senha (Min: 8 letras)\\\" formControlName=\\\"confirmPassword\\\" type=\\\"password\\\" (focus)=\\\"focus2 = true\\\" (blur)=\\\"focus2 = false\\\" (keydown.enter)=\\\"handleEnterKey()\\\"/>\\n                  <button type=\\\"button\\\" (click)=\\\"passwordReveal()\\\" class=\\\"btn btn-secondary mt-1\\\">\\n                    <i *ngIf=\\\"showPassword\\\" class=\\\"fas fa-eye px-1\\\"></i>\\n                    <i *ngIf=\\\"!showPassword\\\" class=\\\"fas fa-eye-slash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n              <div class=\\\"row my-4\\\">\\n                <div class=\\\"col-12\\\">\\n                  <div class=\\\"custom-control custom-control-alternative custom-checkbox\\\">\\n                    <input class=\\\"custom-control-input\\\" id=\\\"customCheckSignUp\\\" type=\\\"checkbox\\\" formControlName=\\\"roleCheck\\\" />\\n                    <label class=\\\"custom-control-label\\\" for=\\\"customCheckSignUp\\\">\\n                      <span>Administrador\\n                      </span>\\n                    </label>\\n                  </div>\\n                </div>\\n              </div>\\n              <div *ngIf=\\\"!this.isSignUpFailed\\\" class=\\\"rounded text-muted bg-warning text-white\\n              w-60 text-center mt-1 mb-3 mx-auto\\\">\\n                <small>{{this.confirmMessage}} </small>\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                <button [disabled]=\\\"!signUpForm.valid\\\" (click)=\\\"onSubmit()\\\" type=\\\"button\\\" class=\\\"btn btn-secondary mt-4\\\">\\n                  Criar Conta\\n                </button>\\n              </div>\\n            </form>\\n\\n          </div>\\n          <div *ngIf=\\\"isSuccessful\\\" class=\\\"card-body px-lg-5 py-lg-5 text-center\\\">\\n            <i class=\\\"fas fa-envelope fa-5x\\\"></i>\\n            <p style=\\\"font-size: 30px\\\" class=\\\"pt-4\\\">E-mail de Verificação Enviado!</p>\\n            <p style=\\\"font-size: 20px\\\">Verifique sua Caixa de Entrada</p>\\n            <small>O E-mail também pode estar na caixa de spam</small>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","import { Component, OnInit } from \"@angular/core\";\nimport { Grafico } from \"./grafico/grafico.model\"\nimport { DatePipe } from '@angular/common';\nimport { graphConfigPreset} from './grafico/grafico.presets';\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { AuthService } from \"./../../_services/auth.service\";\nimport { DashboardService } from './dashboard.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n})\nexport class DashboardComponent implements OnInit {\n  clickEventsubscription: Subscription;\n  constructor(private authService: AuthService,\n    private sharedService: DashboardService, private datePipe: DatePipe,\n  ) {\n    this.clickEventsubscription = this.sharedService.getClickEvent().subscribe(() => {\n      this.removeGraph(sharedService.currentGraphId);\n    })\n  }\n\n  currentDate = new Date();\n  currentDayAndMonth = this.datePipe.transform(this.currentDate,\"yyyy-MM-dd\");\n  currentTime = this.datePipe.transform(this.currentDate,\"HH:mm\");\n  graphCounter: number = 0;\n  graphIdList = [0, 1, 2, 3];\n  graphMenuIsOpen: boolean = false;\n  activeExperimentInGraphMenu: string = \"Selecione Um Experimento\";\n  data: any[];\n  devices = [ \"Device1\" ];\n  traceReceivedData1: any;\n  traceReceivedData2: any;\n  traceReceivedData3: any;\n  receivedData000: any;\n  receivedData001: any;\n  pullGraphDateStart: string;\n  pullGraphDateEnd: string;\n\n  traceGraphExemplo: any = {\n    valueTS: [\"2019-04-08 13:41:54\", \"2019-04-10 04:47:22\", \"2019-04-12 03:38:51\"],\n    valuePPO2: [\"19.520\", \"19.521\", \"19.522\"],\n    valueTemp: [\"21\", \"22\", \"21\"],\n  };\n\n  pullGraphForm = new FormGroup({\n\t\tpullGraphStartDate: new FormControl('2000-01-01', Validators.required),\n\t\tpullGraphStartTime: new FormControl('00:00', Validators.required),\n\t\tpullGraphEndDate: new FormControl(this.currentDayAndMonth, Validators.required),\n\t\tpullGraphEndTime: new FormControl(this.currentTime, Validators.required),\n\t});\n\n  graphs: Grafico[] =[]\n\n\n  ngOnInit() {\n    this.authService.getDevice().subscribe(\n      (data) => {\n        this.devices = data;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n    console.log(this.datePipe.transform(this.currentDate,\"yyyy-MM-dd\"));\n  }\n\n  openAddGraphMenu(isItOpen: boolean): void {\n    this.graphMenuIsOpen = isItOpen;\n  }\n\n  selectExperiment(experimentSelected: string): void {\n    this.activeExperimentInGraphMenu = experimentSelected;\n  }\n\n  addGraph(): void {\n    console.log(this.pullGraphForm);\n    this.pullGraphDateStart = (this.pullGraphForm.get('pullGraphStartDate').value+\"T\"+this.pullGraphForm.get('pullGraphStartTime').value);\n    this.pullGraphDateEnd = (this.pullGraphForm.get('pullGraphEndDate').value+\"T\"+this.pullGraphForm.get('pullGraphEndTime').value);\n    console.log(this.pullGraphDateStart);\n    console.log(this.pullGraphDateEnd);\n    this.graphMenuIsOpen = false;\n            //this.receivedData000 = JSON.parse(JSON.stringify(data));\n\n            this.traceReceivedData1 = {\n              x: [],\n              y: [],\n              name: \"PP02\",\n            };\n\n            this.traceReceivedData2 = {\n              x: [],\n              y: [],\n              name: \"TEMP\",\n            };\n\n            /*this.receivedData000.forEach((item) => {\n              this.traceReceivedData1.x.push(item.valueTS);\n              this.traceReceivedData1.y.push(item.valuePPO2);\n            });\n\n            this.receivedData000.forEach((item) => {\n              this.traceReceivedData2.x.push(item.valueTS);\n              this.traceReceivedData2.y.push(item.valueTemp);\n            });*/\n            //remova esse comentário para restaurar o login\n            //remova entre essas linhas para restaurar o pull de gráficos do backend ao plotly\n            console.log(this.traceGraphExemplo)\n            this.traceReceivedData1.x.push(this.traceGraphExemplo.valueTS[0], this.traceGraphExemplo.valueTS[1], this.traceGraphExemplo.valueTS[2]);\n            this.traceReceivedData1.y.push(this.traceGraphExemplo.valuePPO2[0], this.traceGraphExemplo.valuePPO2[1], this.traceGraphExemplo.valuePPO2[2]);\n            this.traceReceivedData2.x.push(this.traceGraphExemplo.valueTS[0], this.traceGraphExemplo.valueTS[1], this.traceGraphExemplo.valueTS[2]);\n            this.traceReceivedData2.y.push(this.traceGraphExemplo.valueTemp[0], this.traceGraphExemplo.valueTemp[1], this.traceGraphExemplo.valueTemp[2]);\n            //remova entre essas linhas para restaurar o pull de gráficos do backend ao plotly\n\n            this.graphCounter++; //usado para identificar o grafico e seu div\n            this.graphs.push(\n              {\n                deviceNumber: this.activeExperimentInGraphMenu,\n                id: this.graphIdList[0],\n                name: \"Gráfico O2(%) e Temp\",\n                data: [this.traceReceivedData1, this.traceReceivedData2],\n                layout:\n                {\n                \tresponsive: true,\n                \ttitle: this.activeExperimentInGraphMenu,\n                \tshowlegend: true,\n                \tlegend: {\n                \t\tx: 0,\n                \t\ty: 100,\n                \t},\n                \tstaticPlot: true,\n                \tfont: {\n                \t\tcolor: '#000000',\n                \t},\n                \tpaper_bgcolor: 'rgba(0,0,0,0)',\n                \tplot_bgcolor: 'rgba(0,0,0,0)',\n                \tautosize: false,\n                \txaxis: {\n                \t\ttitle: \"Tempo\",\n                \t},\n                \tyaxis: {\n                \t\ttitle: \"Dados\",\n                \t},\n                },\n                config: graphConfigPreset,\n                exportData: this.receivedData000,\n                exportFields: [\n                  \"valuePPO2\",\n                  \"valueTS\",\n                  \"valueTemp\"\n                ]\n              }\n            );\n            this.graphIdList.splice(0, 1);\n        /*this.authService.getData(this.pullGraphDateStart, this.pullGraphDateEnd, this.activeExperimentInGraphMenu).subscribe(\n          (data) => {\n            this.graphMenuIsOpen = false;\n            this.receivedData000 = JSON.parse(JSON.stringify(data));\n\n            this.traceReceivedData1 = {\n              x: [],\n              y: [],\n              name: \"PP02\",\n            };\n\n            this.traceReceivedData2 = {\n              x: [],\n              y: [],\n              name: \"TEMP\",\n            };\n\n            this.receivedData000.forEach((item) => {\n              this.traceReceivedData1.x.push(item.valueTS);\n              this.traceReceivedData1.y.push(item.valuePPO2);\n            });\n\n            this.receivedData000.forEach((item) => {\n              this.traceReceivedData2.x.push(item.valueTS);\n              this.traceReceivedData2.y.push(item.valueTemp);\n            });\n\n            this.graphCounter++; //usado para identificar o grafico e seu div\n            this.graphs.push(\n              {\n                deviceNumber: this.activeExperimentInGraphMenu,\n                id: this.graphIdList[0],\n                name: \"Gráfico O2(%) e Temp\",\n                data: [this.traceReceivedData1, this.traceReceivedData2],\n                layout:\n                {\n                \tresponsive: true,\n                \ttitle: this.activeExperimentInGraphMenu,\n                \tshowlegend: true,\n                \tlegend: {\n                \t\tx: 0,\n                \t\ty: 100,\n                \t},\n                \tstaticPlot: true,\n                \tfont: {\n                \t\tcolor: '#000000',\n                \t},\n                \tpaper_bgcolor: 'rgba(0,0,0,0)',\n                \tplot_bgcolor: 'rgba(0,0,0,0)',\n                \tautosize: false,\n                \txaxis: {\n                \t\ttitle: \"Tempo\",\n                \t},\n                \tyaxis: {\n                \t\ttitle: \"Dados\",\n                \t},\n                },\n                config: graphConfigPreset,\n                exportData: this.receivedData000,\n                exportFields: [\n                  \"valuePPO2\",\n                  \"valueTS\",\n                  \"valueTemp\"\n                ]\n              }\n            );\n            this.graphIdList.splice(0, 1);\n          },\n          (err) => {\n            console.log(err);\n          }\n        );*/\n  }\n  removeGraph(graphId): void {\n    this.graphs.splice(this.graphs.findIndex(i => i.id === graphId), 1);\n    this.graphIdList.push(graphId);\n    this.graphCounter--;\n  }\n\n}\n","import { Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from '../../_services/authguard.service';\nimport { UserProfileComponent } from \"../../screens/user-profile/user-profile.component\";\nimport { DashboardComponent} from \"../../screens/dashboard/dashboard.component\";\nimport { SignUpComponent } from \"../../screens/sign-up/sign-up.component\";\nimport { NavbarComponent} from \"../../components/navbar/navbar.component\";\nexport const AdminLayoutRoutes: Routes = [\n  {\n    path: \"\",\n    children: [\n      {\n        path: \"user-profile\",\n        component: UserProfileComponent,\n      },\n      {\n        path: \"dashboard\",\n        component: DashboardComponent,\n      },\n      {\n        path: \"navbar\",\n        component: NavbarComponent,\n      },\n      {\n        path: \"sign-up\",\n        component: SignUpComponent,\n      }\n    ],\n  },\n];\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJncmFmaWNvLmNvbXBvbmVudC5zY3NzIn0= */\";"],"sourceRoot":"webpack:///"}