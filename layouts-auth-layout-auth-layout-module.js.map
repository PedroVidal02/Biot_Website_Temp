{"version":3,"sources":["./src/app/screens/forgot-password/forgot-password.component.ts","./src/app/screens/verification-sent/verification-sent.component.ts","./src/app/layouts/auth-layout/auth-layout.routing.ts","./src/app/screens/reset-password/reset-password.component.ts","./src/app/layouts/auth-layout/auth-layout.module.ts","./src/app/screens/sign-in/sign-in.component.ts","./src/app/screens/verification-sent/verification-sent.component.html","./src/app/screens/forgot-password/forgot-password.component.html","./src/app/screens/reset-password/reset-password.component.html","./src/app/screens/sign-in/sign-in.component.html"],"names":[],"mappings":"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","file":"layouts-auth-layout-auth-layout-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../_services/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html'\n})\n\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { };\n\n  forgotPasswordForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n  });\n  errorMessage: string = '';\n  focus: boolean = false;\n  isRecoveryFailed: boolean = false;\n  isRecoverySent: boolean = false;\n\n  onSubmit(): void {\n    let email = this.forgotPasswordForm.get('email').value;\n\n    this.authService\n      .forgotPassword(email)\n      .subscribe(\n        data => {\n          this.isRecoverySent = true;\n        },\n        err => {\n          this.errorMessage = err.error.message;\n          this.isRecoveryFailed = true;\n        }\n      );\n  };\n\n  ngOnInit() { };\n  ngOnDestroy() { };\n\n};\n","import { ActivatedRoute, Router } from \"@angular/router\";\nimport { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from \"../../_services/auth.service\";\n\n@Component({\n  selector: 'app-verification-sent',\n  templateUrl: './verification-sent.component.html'\n})\n\nexport class VerificationSentComponent implements OnInit {\n\n  errorMessage: string = \"\";\n  isEmailVerificationFailed: boolean = false;\n  private token: string;\n\n  constructor(\n    private authService: AuthService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) { };\n\n  ngOnInit() {\n    this.activatedRoute.params\n      .subscribe((params) => {\n        this.token = String(params.token);\n      });\n    this.authService\n      .verifyEmail(this.token) //mandando o token para a API validar\n      .subscribe(\n        err => {\n          this.errorMessage = err.error.message;\n          this.isEmailVerificationFailed = true;\n        });\n  };\n\n}\n","import { Routes } from \"@angular/router\";\n\nimport { AuthGuardService } from '../../_services/authguard.service';\nimport { ForgotPasswordComponent } from \"../../screens/forgot-password/forgot-password.component\";\nimport { ResetPasswordComponent } from \"../../screens/reset-password/reset-password.component\"\nimport { SignInComponent } from \"../../screens/sign-in/sign-in.component\";\nimport { VerificationSentComponent } from '../../screens/verification-sent/verification-sent.component';\n\nexport const AuthLayoutRoutes: Routes = [\n\n  {\n    path: \"forgot-password\",\n    component: ForgotPasswordComponent,\n  },\n  {\n    path: \"reset-password\",\n    component: ResetPasswordComponent,\n  },\n  {\n    path: \"\",\n    component: SignInComponent,\n  },\n  {\n    path: \"verification-sent\",\n    component: VerificationSentComponent,\n  },\n\n];\n","import { ActivatedRoute, Params, Router } from \"@angular/router\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\n\nimport { AuthService } from \"../../_services/auth.service\";\n\n@Component({\n  selector: \"app-reset-password\",\n  templateUrl: \"./reset-password.component.html\"\n})\n\nexport class ResetPasswordComponent implements OnInit {\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) { };\n\n  resetPasswordForm = new FormGroup({\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\n  });\n  errorMessage: string = '';\n  focus2: boolean = false;\n  isResetPasswordFailed: boolean = false;\n  passwordReseted: boolean = false;\n  showPassword: boolean = false;\n  private token: string;\n\n  onSubmit() {\n    this.activatedRoute.params.subscribe((params) => {\n      this.token = String(params.token);\n    });\n    this.authService\n      .resetPassword(this.token, this.resetPasswordForm.get(\"password\").value)\n      .subscribe(\n        data => {\n          this.passwordReseted = true;\n        },\n        err => {\n          this.errorMessage = err.error.message;\n          this.isResetPasswordFailed = true;\n        });\n  };\n\n  passwordReveal() {\n    this.showPassword = !this.showPassword;\n  };\n\n  ngOnInit() { };\n  ngOnDestroy() { };\n\n};\n","import { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgModule } from \"@angular/core\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { AuthGuardService } from '../../_services/authguard.service';\nimport { AuthLayoutRoutes } from \"./auth-layout.routing\";\nimport { ForgotPasswordComponent } from \"../../screens/forgot-password/forgot-password.component\";\nimport { ResetPasswordComponent } from \"../../screens/reset-password/reset-password.component\"\nimport { SignInComponent } from \"../../screens/sign-in/sign-in.component\";\nimport { VerificationSentComponent } from '../../screens/verification-sent/verification-sent.component';\nimport { ExportService } from 'src/app/_services/export.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(AuthLayoutRoutes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: [\n    ForgotPasswordComponent,\n    ResetPasswordComponent,\n    SignInComponent,\n    VerificationSentComponent\n  ],\n  providers: [AuthGuardService,ExportService]\n})\nexport class AuthLayoutModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { from } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../../_services/auth.service';\nimport { TokenStorageService } from '../../_services/token-storage.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html'\n})\n\nexport class SignInComponent implements OnInit, OnDestroy {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private tokenStorage: TokenStorageService\n  ) { };\n\n  signInForm = new FormGroup({\n    email: new FormControl('', [Validators.required, Validators.email]),\n    password: new FormControl('', [Validators.required]),\n    rememberMe: new FormControl(''),\n  });\n  isLoginFailed: boolean = false;\n  errorMessage: string = '';\n  roles: string[] = [];\n  focus: boolean = false;\n  focus1: boolean = false;\n  rememberMe:boolean = false;\n\n  onSubmit(): void {\n    let email = this.signInForm.get('email').value\n    let password = this.signInForm.get('password').value\n    if(this.signInForm.get('rememberMe').value){\n      this.rememberMe = this.signInForm.get('rememberMe').value\n    }\n    this.router.navigate([\"user/dashboard\"]);\n    /*\n    this.authService\n      .login(email, password)\n      .subscribe(\n        data => {\n          this.tokenStorage.saveToken(data.accessToken,this.rememberMe);\n          this.tokenStorage.saveUser(data,this.rememberMe);\n          this.isLoginFailed = false;\n          this.roles = this.tokenStorage.getUser().roles;\n          this.router.navigate([\"user/dashboard\"]);\n        },\n        err => {\n          this.errorMessage = err.error.message;\n          this.isLoginFailed = true;\n        }\n      );*/\n      //remova esse comentário para restaurar o login\n  };\n\n  handleEnterKey(e){\n     if(this.signInForm.valid){\n        this.onSubmit();\n     }\n  }\n\n  ngOnInit() { };\n  ngOnDestroy() { };\n\n};\n","export default \"<div class=\\\"header py-7 py-lg-8\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"header-body text-center mb-7\\\">\\n      <div class=\\\"row justify-content-center\\\">\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n    <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n      <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n    </svg>\\n  </div>\\n</div>\\n\\n<div class=\\\"container mt--8 pb-5\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-lg-5 col-md-7 pb-lg-12 pb-md-13\\\">\\n      <div class=\\\"card bg-white shadow border-0 my-0\\\">\\n        <div class=\\\"card-body px-lg-5 py-lg-5 text-center\\\">\\n          <i class=\\\"fas fa-envelope-open-text fa-5x\\\"></i>\\n          <p style=\\\"font-size: 30px\\\" class=\\\"pt-4\\\">E-mail Verificado com Sucesso!</p>\\n        </div>\\n      </div>\\n      <div class=\\\"row my-2\\\">\\n        <div class=\\\"col text-right\\\">\\n          <a [routerLink]=\\\"['']\\\" class=\\\"text-light\\\"><small>Fazer Login</small></a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"header py-7 py-lg-8 pt-lg-9\\\">\\n    <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n      <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n      </svg>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container pt-5 pb-5\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-6 col-md-8\\\">\\n        <div class=\\\"card bg-white border-0 my-0\\\">\\n          <div *ngIf=\\\"!isRecoverySent\\\" class=\\\"card-header bg-transparent pb-5\\\">\\n            <div class=\\\"text-muted text-center mt-2 mb-3\\\">\\n              <small> Recuperar a Senha </small>\\n            </div>\\n            <div *ngIf=\\\"this.isRecoveryFailed\\\" class=\\\"rounded text-muted bg-danger text-white\\n              w-60 text-center mt--2 mb-3 mx-auto\\\">\\n              <small>{{this.errorMessage}}</small>\\n            </div>\\n            <form [formGroup]=\\\"forgotPasswordForm\\\" role=\\\"form\\\">\\n              <div class=\\\"form-group mb-4\\\" [ngClass]=\\\"{ focused: focus === true }\\\">\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"><i class=\\\"ni ni-email-83\\\"></i></span>\\n                  </div>\\n                  <input formControlName=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" (focus)=\\\"focus = true\\\" (blur)=\\\"focus = false\\\" />\\n                </div>\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                <button [disabled]=\\\"!forgotPasswordForm.valid\\\" (click)=\\\"onSubmit()\\\" type=\\\"button\\\" class=\\\"btn btn-secondary my-4\\\">\\n                  Enviar Email de Recuperação\\n                </button>\\n              </div>\\n            </form>\\n          </div>\\n          <div *ngIf=\\\"isRecoverySent\\\" class=\\\"card-body px-lg-5 py-lg-5 text-center\\\">\\n            <i class=\\\"fas fa-envelope fa-5x\\\"></i>\\n            <p style=\\\"font-size: 30px\\\" class=\\\"pt-4\\\">E-mail de Recuperação Enviado!</p>\\n            <p style=\\\"font-size: 20px\\\">Verifique sua Caixa de Entrada</p>\\n            <small>O E-mail também pode estar na caixa de spam</small>\\n          </div>\\n        </div>\\n        <div class=\\\"row my-2\\\">\\n          <div class=\\\"col text-right\\\">\\n            <a class=\\\"text-light\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['']\\\">\\n              <small> Fazer Login </small>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"header py-7\\\">\\n    <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n      <svg x=\\\"0\\\" y=\\\"0\\\" viewBox=\\\"0 0 2560 100\\\" preserveAspectRatio=\\\"none\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n        <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n      </svg>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container py-9\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-6 col-md-8\\\">\\n        <div class=\\\"card bg-white border-0 my-0\\\">\\n          <div *ngIf=\\\"!passwordReseted\\\" class=\\\"card-body\\\">\\n            <div *ngIf=\\\"this.isResetPasswordFailed\\\" class=\\\"rounded text-muted bg-danger text-white w-60 text-center\\n            mt-1 mb-3 mx-auto\\\">\\n              <small>{{this.errorMessage}} </small>\\n            </div>\\n            <div class=\\\"text-muted text-center pb-3\\\">\\n              <small> Digite Sua Nova Senha </small>\\n            </div>\\n            <form role=\\\"form\\\" [formGroup]=\\\"resetPasswordForm\\\">\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focus2 === true }\\\">\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\">\\n                      <i class=\\\"ni ni-lock-circle-open\\\"></i>\\n                    </span>\\n                  </div>\\n                  <input [type]=\\\"showPassword ? 'text' : 'password'\\\" class=\\\"form-control\\\" placeholder=\\\"Nova Senha (Min: 8 letras)\\\" formControlName=\\\"password\\\" type=\\\"password\\\" (focus)=\\\"focus2 = true\\\" (blur)=\\\"focus2 = false\\\" />\\n                  <button type=\\\"button\\\" (click)=\\\"passwordReveal()\\\" class=\\\"btn btn-secondary mt-1\\\">\\n                    <i *ngIf=\\\"showPassword\\\" class=\\\"fas fa-eye px-1\\\"></i>\\n                    <i *ngIf=\\\"!showPassword\\\" class=\\\"fas fa-eye-slash\\\"></i>\\n                  </button>\\n                </div>\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                <button [disabled]=\\\"!resetPasswordForm.valid\\\" (click)=\\\"onSubmit()\\\" type=\\\"button\\\" class=\\\"btn btn-secondary mt-4\\\">\\n                  Redefinir Senha\\n                </button>\\n              </div>\\n            </form>\\n          </div>\\n          <div *ngIf=\\\"passwordReseted\\\" class=\\\"card-body px-lg-5 py-lg-5 text-center\\\">\\n            <i class=\\\"fas fa-check fa-5x\\\"></i>\\n            <p style=\\\"font-size: 30px\\\" class=\\\"pt-4\\\">Senha Alterada Com Sucesso!\\n            </p>\\n            <small>Faça Login Para Continuar</small>\\n          </div>\\n        </div>\\n        <div class=\\\"row my-2\\\">\\n          <div class=\\\"col text-right\\\">\\n            <a class=\\\"text-light\\\" routerLinkActive=\\\"active\\\" [routerLink]=\\\"['']\\\">\\n              <small>Fazer Login</small>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"main-content\\\">\\n  <div class=\\\"header py-7 py-lg-8 pt-lg-9\\\">\\n    <div class=\\\"container\\\">\\n      <div class=\\\"header-body text-center mb-5\\\">\\n        <div class=\\\"row justify-content-center\\\">\\n          <div class=\\\"col-xl-3 col-lg-3 col-md-4 col-sm-5 col-6 px-6\\\">\\n            <img\\n              class=\\\"img-fluid\\\"\\n              src=\\\"/assets/img/biot/biot_logo.png\\\"\\n              alt=\\\"Logo da BioT\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"separator separator-bottom separator-skew zindex-100\\\">\\n      <svg\\n        x=\\\"0\\\"\\n        y=\\\"0\\\"\\n        viewBox=\\\"0 0 2560 100\\\"\\n        preserveAspectRatio=\\\"none\\\"\\n        version=\\\"1.1\\\"\\n        xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      >\\n        <polygon class=\\\"fill-default\\\" points=\\\"2560 0 2560 100 0 100\\\"></polygon>\\n      </svg>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"container mt--8 pb-5\\\">\\n    <div class=\\\"row justify-content-center\\\">\\n      <div class=\\\"col-lg-5 col-md-7\\\">\\n        <div class=\\\"card bg-white border-0 my-0\\\">\\n          <div class=\\\"card-header bg-transparent pb-5\\\">\\n            <div class=\\\"row justify-content-center mb-3\\\">\\n              <div class=\\\"col-xl-5 col-lg-4 col-md-4 col-sm-3 col-4 px-3\\\">\\n                <img\\n                  class=\\\"img-fluid\\\"\\n                  src=\\\"/assets/img/biot/logo_text.png\\\"\\n                  alt=\\\"BioT\\\"\\n                />\\n              </div>\\n            </div>\\n            <form [formGroup]=\\\"signInForm\\\" role=\\\"form\\\">\\n\\n              <div\\n                class=\\\"form-group mb-3\\\"\\n                [ngClass]=\\\"{ focused: focus === true }\\\"\\n              >\\n                <div\\n                  *ngIf=\\\"this.isLoginFailed\\\"\\n                  class=\\\"rounded text-muted bg-warning text-white w-60 text-center mt-1 mb-3 mx-auto\\\"\\n                >\\n                  <small>{{ this.errorMessage }}</small>\\n                </div>\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"\\n                      ><i class=\\\"ni ni-email-83\\\"></i\\n                    ></span>\\n                  </div>\\n                  <input\\n                    class=\\\"form-control\\\"\\n                    placeholder=\\\"Email\\\"\\n                    type=\\\"email\\\"\\n                    formControlName=\\\"email\\\"\\n                    (focus)=\\\"focus = true\\\"\\n                    (blur)=\\\"focus = false\\\"\\n                  />\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\" [ngClass]=\\\"{ focused: focus1 === true }\\\">\\n                <div class=\\\"input-group input-group-alternative\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\"\\n                      ><i class=\\\"ni ni-lock-circle-open\\\"></i\\n                    ></span>\\n                  </div>\\n                  <input\\n                    class=\\\"form-control\\\"\\n                    placeholder=\\\"Senha\\\"\\n                    type=\\\"password\\\"\\n                    formControlName=\\\"password\\\"\\n                    (focus)=\\\"focus1 = true\\\"\\n                    (blur)=\\\"focus1 = false\\\"\\n                  />\\n                </div>\\n              </div>\\n              <div\\n                class=\\\"custom-control custom-control-alternative custom-checkbox\\\"\\n              >\\n                <input\\n                  class=\\\"custom-control-input\\\"\\n                  id=\\\" customCheckSignIn\\\"\\n                  type=\\\"checkbox\\\"\\n                  formControlName=\\\"rememberMe\\\"\\n                />\\n                <label class=\\\"custom-control-label\\\" for=\\\" customCheckSignIn\\\">\\n                  <span>Lembrar de mim</span>\\n                </label>\\n              </div>\\n              <div class=\\\"text-center\\\">\\n                <button\\n                  [disabled]=\\\"!signInForm.valid\\\"\\n                  (click)=\\\"onSubmit()\\\"\\n                  type=\\\"button\\\"\\n                  class=\\\"btn btn-secondary my-4\\\"\\n                >\\n                  Entrar\\n                </button>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n        <div class=\\\"row my-2\\\">\\n          <div class=\\\"col text-left\\\">\\n            <a\\n              class=\\\"text-light\\\"\\n              routerLinkActive=\\\"active\\\"\\n              [routerLink]=\\\"['/forgot-password']\\\"\\n            >\\n              <small> Esqueceu a Senha? </small>\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";"],"sourceRoot":"webpack:///"}